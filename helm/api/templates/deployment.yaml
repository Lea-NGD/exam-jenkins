apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.image.name }}
  labels:
    {{- include "api.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "api.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Values.image.name }}
          securityContext:
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          # image: "lngd/api-cast:v.19.0"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-pass
                  key: {{ .Values.db.password }}
            - name: POSTGRES_USER
              valueFrom:
              value: {{ .Values.db.user }}
            - name: POSTGRES_DB
              value: {{ .Values.db.name }}
            - name: DATABASE_URI
              value: {{ .Values.service.databaseUri }}
            - name: {{ .Values.service.name_cast }}
              value: {{ .Values.service.castServiceHostUrl }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/v1
              port: http
          readinessProbe:
            httpGet:
              path: /api/v1
              port: http
          volumeMounts:
            - name: {{ .Values.volume.name }}
              mountPath: {{ .Values.volume.mountpath }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: {{ .Values.volume.name }} # Nom du volume pour le stockage des donn√©es persistantes
          persistentVolumeClaim:
            claimName: {{ include "api.fullname" . }}
